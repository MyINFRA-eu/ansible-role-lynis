---
#####
#
# @name MyINFRA.eu ~ Ansible Lynis Role
# @version 2025.07-001
# @since 2025.07-001
#
# @copyright (c) 2025 (and beyond) - Dennis de Houx, All In One, One For The code
# @author Dennis de Houx <dennis@dehoux.be>
# @license https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en CC BY-NC-ND 4.0
#
###
#
# Ansible role for lynis management
#
#####

- name: "Copyright & Version information"
  ansible.builtin.debug:
    msg:
      - "MyINFRA.eu ~ Ansible Lynis Role"
      - "Version   : {{ myinfra.lynis.version }}"
      - "Copyright : (c) 2025 (and beyond) - Dennis de Houx, All In One, One For The code"
      - "Author    : Dennis de Houx <dennis@dehoux.be>"
      - "License   : https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en CC BY-NC-ND 4.0"

- name: "LYNIS > Install package"
  ansible.builtin.apt:
    name: "lynis"
    state: "{{ packages.state | default('latest') }}"
    update_cache: "{{ packages.cache.update | default(true) }}"
    cache_valid_time: "{{ packages.cache.time | default(3600) }}"
    install_recommends: "{{ packages.recommends | default(false) }}"
  become: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - lynis is defined and lynis is true
  tags:
    - lynis_install

- name: "LYNIS > Remove package"
  ansible.builtin.apt:
    name: "lynis"
    state: absent
    autoremove: "{{ packages.autoremove | default(false) }}"
    fail_on_autoremove: true
    update_cache: "{{ packages.cache.update | default(true) }}"
    cache_valid_time: "{{ packages.cache.time | default(3600) }}"
  become: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - lynis is not defined or lynis is false
  tags:
    - lynis_remove

- name: "LYNIS > Run system audit"
  ansible.builtin.command:
    cmd: lynis
    argv:
      - audit
      - system
      - --quick
      - --auditor "Ansible"
    chdir: "/root"
  register: lynis_audit_output
  become: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - lynis is defined and lynis is true
  tags:
    - lynis_audit

- name: "LYNIS > Run pentest (non-privileged)"
  ansible.builtin.command:
    cmd: lynis
    argv:
      - audit
      - system
      - --pentest
      - --quick
      - --auditor "Ansible"
    chdir: "/root"
  register: lynis_pentest_output
  become: false
  when:
    - ansible_facts['os_family'] == "Debian"
    - lynis is defined and lynis is true
  tags:
    - lynis_pentest
